//easy
/ C++ program to Find another array
// such that the hamming distance
// from the original array is maximum
 
// requires O(n*n) time and O(1) extra space;
#include <bits/stdc++.h>
using namespace std;
 
// Return the maximum hamming distance of a rotation
int maxHamming(int arr[], int n){
    int hmmd;
      // outer loop for how much rotation
    for(int j = 1; j < n; j++){
        hmmd = 0;
          //inner loop to compare elements with elements on shifted index
        for(int i = 0 ; i < n; i++){
            if(arr[i] != arr[(i + j) % n])
                hmmd++;
        }
          //max possible hamming distance is n, no need to check further
        if(hmmd == n)
            return n;
    }
    return hmmd;
}
 
// driver program
int main()
{
    int arr[] = {2, 4, 6, 8};   
    int n = sizeof(arr)/sizeof(arr[0]);
    cout << maxHamming(arr, n);   
    return 0;
}
